// Generated by view binder compiler. Do not edit!
package com.example.myjewellary.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myjewellary.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProductDetailsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView productDescriptionDetails;

  @NonNull
  public final ImageView productImageDetails;

  @NonNull
  public final TextView productNameDetails;

  @NonNull
  public final TextView productPriceDetails;

  private ActivityProductDetailsBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView productDescriptionDetails, @NonNull ImageView productImageDetails,
      @NonNull TextView productNameDetails, @NonNull TextView productPriceDetails) {
    this.rootView = rootView;
    this.productDescriptionDetails = productDescriptionDetails;
    this.productImageDetails = productImageDetails;
    this.productNameDetails = productNameDetails;
    this.productPriceDetails = productPriceDetails;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProductDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProductDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_product_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProductDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.product_description_details;
      TextView productDescriptionDetails = ViewBindings.findChildViewById(rootView, id);
      if (productDescriptionDetails == null) {
        break missingId;
      }

      id = R.id.product_image_details;
      ImageView productImageDetails = ViewBindings.findChildViewById(rootView, id);
      if (productImageDetails == null) {
        break missingId;
      }

      id = R.id.product_name_details;
      TextView productNameDetails = ViewBindings.findChildViewById(rootView, id);
      if (productNameDetails == null) {
        break missingId;
      }

      id = R.id.product_price_details;
      TextView productPriceDetails = ViewBindings.findChildViewById(rootView, id);
      if (productPriceDetails == null) {
        break missingId;
      }

      return new ActivityProductDetailsBinding((RelativeLayout) rootView, productDescriptionDetails,
          productImageDetails, productNameDetails, productPriceDetails);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
